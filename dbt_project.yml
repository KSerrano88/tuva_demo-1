name: 'tuva_claims_demo'
version: '0.1.2'
config-version: 2


profile: FH_united # Configuration required (your profile to connect dbt to your data warehouse)


model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"
clean-targets:
  - "target"
  - "dbt_packages"

vars:
  # This variable sets the name of the database
  # where the output of the Tuva Project will be
  # dumped into. Make sure this database exists
  # in your data warehouse before you run this package,
  # since dbt can create schemas in your data warehouse,
  # but it cannot create databases.
  tuva_database: TRANSFORMED_DATA


  # This variable enables the full the_tuva_project package run.
#  tuva_packages_enabled: false
#  data_profiling_enabled: true

# By default, dbt prefixes schema names with the target
# schema in your profile. We recommend including this
# here so that dbt does not prefix the output schemas
# of the Tuva Project with anything:
dispatch:
  - macro_namespace: dbt
    search_order: [ 'the_tuva_project', 'dbt' ]


seeds:
  tuva_claims_demo:
    eligibility:
      +post-hook: "{{ load_seed('tuva-public-resources/tuva-claims-demo/eligibility.csv') }}"
    medical_claim:
      +post-hook: "{{ load_seed('tuva-public-resources/tuva-claims-demo/medical_claim.csv') }}"
    pharmacy_claim:
      +post-hook: "{{ load_seed('tuva-public-resources/tuva-claims-demo/pharmacy_claim.csv') }}"
    provider:
      +post-hook: "{{ load_provider_seed('tuva-public-resources/provider_data','provider.csv') }}"
    other_provider_taxonomy:
      +post-hook: "{{ load_provider_seed('tuva-public-resources/provider_data','other_provider_taxonomy.csv') }}"
#    provider:
#      +post-hook: "{{ load_seed('tuva-public-resources/provider_uncompressed/provider.csv') }}"
#    other_provider_taxonomy:
#      +post-hook: "{{ load_seed('tuva-public-resources/provider_uncompressed/other_provider_taxonomy.csv') }}"
#



